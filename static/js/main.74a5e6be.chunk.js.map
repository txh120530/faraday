{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","repos","filter","Grid","container","rowSpacing","columnSpacing","xs","sm","md","justify","style","padding","length","map","repo","name","includes","item","href","html_url","rel","target","textDecoration","Card","CardContent","Typography","variant","component","forks_count","open_issues_count","dayjs","pushed_at","format","getCard","App","useState","setRepos","setFilter","loadMore","setLoadMore","githubPage","setGithubPage","useEffect","url","console","log","fetchData","a","fetch","response","json","className","AppBar","position","Toolbar","TextField","onChange","e","value","placeholder","paddingTop","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4WA+CeA,EAhCD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAoBpB,OACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,EAAGC,cAAe,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAMC,QAAQ,eAAeC,MAAO,CAACC,QAAS,QAAhH,SAEFX,EAAMY,OAAS,GAAKZ,EAAMa,KAC1B,SAACC,GAAD,OACCA,EAAKC,KAAKC,SAASf,IAxBT,SAACa,GACd,OACE,cAACZ,EAAA,EAAD,CAAMe,MAAI,EAACX,GAAI,GAAIE,GAAI,EAAvB,SACA,mBAAGU,KAAMJ,EAAKK,SAAUC,IAAI,aAAaC,OAAO,SAASX,MAAO,CAACY,eAAgB,QAAjF,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,mBAA6Cb,EAAKC,QAClD,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,0BAAoDb,EAAKc,eACzD,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,gCAA0Db,EAAKe,qBACxE,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,gCAA0DG,IAAMhB,EAAKiB,WAAWC,OAAO,yBAPrDlB,EAAKC,MAuBnCkB,CAAQnB,S,MCqCAoB,MAhEf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOnC,EAAP,KAAcoC,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOlC,EAAP,KAAeoC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KA+BF,OA3BEC,qBAAU,WACV,IAAMC,EAAG,wEAAoEH,GAG7E,GAFAI,QAAQC,IAAIF,IAEE,IAAXL,EAAgB,CACb,IAAMQ,EAAS,uCAAG,8BAAAC,EAAA,+EAEOC,MAAML,GAFb,cAEVM,EAFU,gBAGGA,EAASC,OAHZ,OAGVA,EAHU,OAIhBd,EAAS,GAAD,mBAAKpC,GAAL,YAAekD,KACvBA,EAAKtC,OAAS,IAAM2B,GAAY,GAASE,EAAcD,EAAa,GALpD,kDAOhBI,QAAQC,IAAI,QAAZ,MAPgB,0DAAH,qDAUjBC,OAEL,CAACR,EAAUE,IAWV,sBAAKW,UAAU,MAAf,UAEE,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACN,cAACC,EAAA,EAAD,UACU,sBAAKH,UAAU,kBAAf,UACE,cAAC,IAAD,CAAYA,UAAU,eACtB,cAACI,EAAA,EAAD,CACEJ,UAAU,cACVK,SAjBe,SAACC,GAC1BpB,EAAUoB,EAAEpC,OAAOqC,QAiBThC,QAAQ,WACRiC,YAAY,kBAMpB,0BAASjD,MAAO,CAACkD,WAAY,SAA7B,UACA,oBAAIC,MAAM,SAAV,kCACA,mBAAGA,MAAM,SAAT,qDAGA,cAAC,EAAD,CAAO7D,MAAOA,EAAOC,OAAQA,QAEf,IAAbqC,EAAoB,mBAAGuB,MAAM,SAAT,wBAAmC,SCpE9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74a5e6be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography\r\n} from \"@mui/material\";\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Table = ({ repos, filter }) => {\r\n\tconst getCard = (repo) => {\r\n    return (\r\n      <Grid item xs={12} md={4} key={repo.name}>\r\n      <a href={repo.html_url} rel=\"noreferrer\" target=\"_blank\" style={{textDecoration: 'none'}}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" component=\"h2\" >{`${repo.name}`}</Typography>\r\n            <Typography variant=\"h6\" component=\"h2\" >{`Forks: ${repo.forks_count}`}</Typography>\r\n            <Typography variant=\"h6\" component=\"h2\" >{`Open Issues: ${repo.open_issues_count}`}</Typography>\r\n\t\t\t<Typography variant=\"h6\" component=\"h2\" >{`Latest Push: ${dayjs(repo.pushed_at).format('DD/MM/YYYY')}`}</Typography>\r\n                        \r\n          </CardContent>\r\n        </Card>\r\n        </a>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}  justify=\"space-around\" style={{padding: \"2rem\"}}>\r\n\r\n\t    {repos.length > 0 && repos.map(\r\n\t    \t(repo) =>\r\n\t    \t\trepo.name.includes(filter) &&\r\n\t    \t\tgetCard(repo)\r\n\t\t)}\t    \r\n\t    </Grid>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport Table from './components/Table';\n\nimport './App.css';\n\n\nfunction App() {\n    const [repos, setRepos] = useState([]);\n    const [filter, setFilter] = useState(\"\");\n    const [loadMore, setLoadMore] = useState(true);\n    const [githubPage, setGithubPage] = useState(1);\n\n\n\n    useEffect(() => {\n    const url = `https://api.github.com/orgs/faradayio/repos?per_page=100&page=${githubPage}`;\n    console.log(url);\n\n    if(loadMore===true){\n          const fetchData = async () => {\n          try {\n            const response = await fetch(url);\n            const json = await response.json();\n            setRepos([...repos, ...json]);\n            json.length < 100 ? setLoadMore(false) : setGithubPage(githubPage + 1);\n          } catch (error) {\n            console.log(\"error\", error);\n          }\n        };\n        fetchData();\n    }\n}, [loadMore, githubPage]);\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <AppBar position=\"fixed\">\n<Toolbar>\n          <div className=\"searchContainer\">\n            <SearchIcon className=\"searchIcon\" />\n            <TextField\n              className=\"searchInput\"\n              onChange={handleSearchChange}\n              variant=\"standard\"\n              placeholder=\"Search\"\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <section style={{paddingTop: \"100px\"}}>\n      <h1 align=\"center\">Faraday Github Repos</h1>\n      <p align=\"center\">Click a card to visit that Repo's page.</p>\n\n      \n      <Table repos={repos} filter={filter}/>\n      </section>\n      {loadMore === true ? <p align=\"center\">Loading...</p> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}